import org.jenkinsci.plugins.pipeline.modeldefinition.Utils

pipeline {
    agent { label 'IOSDEV2' }

    triggers {
        gitlab(
            triggerOnNoteRequest: true
        )
    }

    environment {
        KEYCHAIN_PASSWORD     = credentials('KEYCHAIN_PASSWORD')
        MATCH_PASSWORD        = credentials('MATCH_PASSWORD')
        APPCENTER_API_TOKEN   = credentials('MICROSOFT_APPCENTER-UPLOAD-TOKEN_IOS_GSIA')
        APP_STORE_CONNECT     = credentials('APPSTORE-CONNECT_API-KEY')
        TEAMS_WEBHOOK_CI      = credentials('TEAMS_GSIA-IOS-BUILDS')
        TEAMS_WEBHOOK_RELEASE = credentials('TEAMS_GSIA-IOS-BUILDS')
        NEXUS_CREDENTIALS     = credentials('Nexus')
        GITLAB_API_TOKEN      = credentials('svc_gitlab_prod_personal_access_token_secret_text')
        GITLAB_HOSTNAME           = credentials('GITLAB_HOSTNAME_IOS_ERP')

        APP_STORE_CONNECT_API_KEY_KEY_ID = "${APP_STORE_CONNECT_USR}"
        APP_STORE_CONNECT_API_KEY_KEY    = "${APP_STORE_CONNECT_PSW}"

        XAPIKEY               = credentials('GEMATIK_SOLUTIONS_API_KEY')
        MATCH_USERNAME        = credentials('MATCH_USERNAME')
        MATCH_GIT_URL         = credentials('MATCH_GIT_URL')

        CIBUILD = true
    }
    parameters {
        booleanParam(name: 'DEPLOY_TO_APPSTORE', defaultValue: false, description: 'Manual trigger AppStore upload')
    }

    options {
        ansiColor('xterm')
        copyArtifactPermission('*')
    }

    stages {
        stage('Fastlane cibuild') {
            steps {
                // Actual CI Build, Tests, Demo App
                sh label: 'starting ios test run', script: '''#!/bin/bash -l
                    if [ -f $HOME/.bash_profile ]; then source $HOME/.bash_profile; fi

                    set -ev

                    security -v unlock-keychain -p "${KEYCHAIN_PASSWORD}" ~/Library/Keychains/login.keychain

                    make cibuild
                    '''
            }
        }

        stage('Distribute to Appstore') {
            when {
                anyOf {
                    branch pattern: "release/.*", comparator: "REGEXP";
                    expression {
                       return params.DEPLOY_TO_APPSTORE
                    }
                }
            }

            steps {
                sh label: 'list build environment', script: '''#!/bin/bash -l
                    sw_vers
                    rvm list
                    brew list --versions
                    '''

                // Build and Upload Appstore IPA
                sh label: 'Appstore Build', script: '''#!/bin/bash -l
                    if [ -f $HOME/.bash_profile ]; then source $HOME/.bash_profile; fi

                    set -ev

                    security -v unlock-keychain -p "${KEYCHAIN_PASSWORD}" ~/Library/Keychains/login.keychain

                    make setup
                    bundle exec fastlane publish
                    '''

                sh label: 'archive artifacts', script: '''#!/bin/bash -l

                    if [ -f $HOME/.bash_profile ]; then source $HOME/.bash_profile; fi

                    set -ev

                    VERSION=$(grep -A 1 -R CFBundleShortVersionString ./gsia_iOS/gsia_iOS/Info.plist | grep "<string>" | sed -E "s/.*<string>(.*)<\\/string>/\\1/g")
                    GIT_HASH=$(git rev-parse --short HEAD)
                    DATE=$(date '+%Y%m%d')
                    curl -u "${NEXUS_CREDENTIALS}" --http1.1 --upload-file "artifacts/appstorebuild/distribution/gsia_${BUILD_NUMBER}_adhoc.ipa" "https://nexus.prod.ccs.gematik.solutions/repository/Apps/de/gematik/GSIA/ios/${VERSION}/gsia_${DATE}_${BUILD_NUMBER}_${GIT_HASH}_adhoc.ipa"
                    curl -u "${NEXUS_CREDENTIALS}" --http1.1 --upload-file "artifacts/appstorebuild/distribution/gsia_${BUILD_NUMBER}_adhoc.app.dSYM.zip" "https://nexus.prod.ccs.gematik.solutions/repository/Apps/de/gematik/GSIA/ios/${VERSION}/gsia_${DATE}_${BUILD_NUMBER}_${GIT_HASH}_adhoc.app.dSYM.zip"
                    curl -u "${NEXUS_CREDENTIALS}" --http1.1 --upload-file "artifacts/appstorebuild/distribution/gsia_${BUILD_NUMBER}_store.ipa" "https://nexus.prod.ccs.gematik.solutions/repository/Apps/de/gematik/GSIA/ios/${VERSION}/gsia_${DATE}_${BUILD_NUMBER}_${GIT_HASH}_store.ipa"
                    curl -u "${NEXUS_CREDENTIALS}" --http1.1 --upload-file "artifacts/appstorebuild/distribution/gsia_${BUILD_NUMBER}_store.app.dSYM.zip" "https://nexus.prod.ccs.gematik.solutions/repository/Apps/de/gematik/GSIA/ios/${VERSION}/gsia_${DATE}_${BUILD_NUMBER}_${GIT_HASH}_store.app.dSYM.zip"
                    '''
            }

        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'artifacts/**,fastlane/test_output/*,DerivedData/Logs/Test/**', excludes: 'artifacts/**/*.xcarchive/**', allowEmptyArchive: true
        }
    }
}